name: Publish Docker image
on:
  push:
    branches:
      - develop
jobs:
  push_to_registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build container image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/ts-express-server:${{ github.sha }}
            ghcr.io/${{ github.repository }}/ts-express-server:latest

      - name: Public IP
        id: ip
        uses: haythem/public-ip@v1.2
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - uses: actions/checkout@v2
      - name: Deploy
        env:
          PRIVATE_KEY: ${{ secrets.GCP_PRIVATE_KEY }}
          USER_NAME: ${{ secrets.GCP_USER_NAME }}
          HOST_NAME: ${{ secrets.GCP_HOST_NAME }}
          SECURITY_GROUP: ${{ secrets.GCP_SECURITY_GROUP_NAME }}
        run: |
          # https://github.com/haythem/public-ip
          IP_ADDRESS=`echo ${{ steps.ip.outputs.ipv4 }}`

          # SSHポートを開放する
          gcloud compute firewall-rules create ${SECURITY_GROUP} --action=ALLOW --rules=tcp:22 --source-ranges="$IP_ADDRESS"/32

          # SSH接続して、git pullする
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOST_NAME} '
          if [ $(docker ps -q | wc -l) != 0 ] ; then docker stop $(docker ps -q);fi &&
          docker container prune --force &&
          if [ $(docker images -q | wc -l) != 0 ] ; then docker rmi $(docker images -q);fi &&
          docker pull ghcr.io/kajirikajiri/ts-express-server/ts-express-server:latest &&
          docker run -d -p 3000:3000 $(docker images --filter=reference=ghcr.io/kajirikajiri/ts-express-server/ts-express-server --format "{{.ID}}")
          '

          # SSHのポートを閉じる
          gcloud compute firewall-rules delete ${SECURITY_GROUP}
